<?php

namespace Proxies\__CG__\Eloboosted\GameinjectionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Notification extends \Eloboosted\GameinjectionBundle\Entity\Notification implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'idNotification', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'contenu', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'dateNotification', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'vue', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'notificationtitle', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'imagen', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'message', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'forum', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'invite', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'idCompteNot'];
        }

        return ['__isInitialized__', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'idNotification', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'contenu', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'dateNotification', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'vue', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'notificationtitle', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'imagen', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'message', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'forum', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'invite', '' . "\0" . 'Eloboosted\\GameinjectionBundle\\Entity\\Notification' . "\0" . 'idCompteNot'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Notification $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdNotification()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdNotification();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdNotification', []);

        return parent::getIdNotification();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdNotification($idNotification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdNotification', [$idNotification]);

        return parent::setIdNotification($idNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function getContenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContenu', []);

        return parent::getContenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setContenu($contenu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContenu', [$contenu]);

        return parent::setContenu($contenu);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateNotification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateNotification', []);

        return parent::getDateNotification();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateNotification($dateNotification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateNotification', [$dateNotification]);

        return parent::setDateNotification($dateNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function getVue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVue', []);

        return parent::getVue();
    }

    /**
     * {@inheritDoc}
     */
    public function setVue($vue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVue', [$vue]);

        return parent::setVue($vue);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotificationtitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotificationtitle', []);

        return parent::getNotificationtitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotificationtitle($notificationtitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotificationtitle', [$notificationtitle]);

        return parent::setNotificationtitle($notificationtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getImagen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagen', []);

        return parent::getImagen();
    }

    /**
     * {@inheritDoc}
     */
    public function setImagen($imagen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagen', [$imagen]);

        return parent::setImagen($imagen);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessage', []);

        return parent::getMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessage', [$message]);

        return parent::setMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getForum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForum', []);

        return parent::getForum();
    }

    /**
     * {@inheritDoc}
     */
    public function setForum($forum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForum', [$forum]);

        return parent::setForum($forum);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvite', []);

        return parent::getInvite();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvite($invite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvite', [$invite]);

        return parent::setInvite($invite);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCompteNot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCompteNot', []);

        return parent::getIdCompteNot();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCompteNot($idCompteNot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCompteNot', [$idCompteNot]);

        return parent::setIdCompteNot($idCompteNot);
    }

}
